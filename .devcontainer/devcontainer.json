// For format details, see https://aka.ms/vscode-remote/devcontainer.json or this file's README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.123.0/containers/docker-existing-dockerfile
{
	"name": "Existing Dockerfile",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "../Dockerfile",

	// Set *default* container specific settings.json values on container create.
	"settings": { 
		"terminal.integrated.shell.linux": "/usr/bin/pwsh"
	},

	// Add the IDs of extensions you want installed when the container is created.
	"extensions": [
		"ms-vscode.powershell-preview"
	],

	// Emulate the Github Actions context
	"containerEnv": {
		"GITHUB_ACTIONS": "true",
		"GITHUB_ACTOR": "nektos/act",
		"GITHUB_EVENT_NAME": "push",
		"GITHUB_EVENT_PATH": "/github/workflow/event.json",
		"GITHUB_REF": "\\refs\\heads\\main",
		"GITHUB_REPOSITORY": "JustinGrote/Super-Duper-Linter",
		"GITHUB_RUN_ID": "1",
		"GITHUB_RUN_NUMBER": "1",
		"GITHUB_WORKFLOW": "Test",
		"GITHUB_WORKSPACE": "/github/workspace",
		"HOME": "/github/home"
	},

	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Setup dev to use source, makes debugging easier
	"postCreateCommand": "ln -s /workspaces/Super-Duper-Linter /github/workspace && rm -rf /action && ln -s /workspaces/Super-Duper-Linter /action",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	//"runArgs": [ "--env-file=.devcontainer/githubaction.env" ]

	// Uncomment to use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
	// "mounts": [ "source=/var/run/docker.sock,target=/var/run/docker.sock,type=bind" ],

	// Uncomment to connect as a non-root user. See https://aka.ms/vscode-remote/containers/non-root.
	// "remoteUser": "vscode"
}
